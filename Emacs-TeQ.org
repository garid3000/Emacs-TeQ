#+title:    Emacs TeQ: Alphabets
#+subtitle: Input Method written in Quail for entering LaTeX math expressions
#+author:   Garid Zorigoo
#+auto_tangle: t
#+startup: show2levels

* Roman, Greek alphabets & their modification
Location: [[file:Resources/01-Roman-Greek-Alphabets.org]]
#+INCLUDE: "./Resources/01-Roman-Greek-Alphabets.org"           
* Symbols & their modification
Location: [[file:Resources/02-Symbols-and-their-modification.org]]
#+INCLUDE: "./Resources/02-Symbols-and-their-modification.org"                             
* Function & Integral Differentials
Location: [[file:Resources/03-Functions-Sum-Integral-Differential.org]]
#+INCLUDE: "./Resources/03-Functions-Sum-Integral-Differential.org" 
* Structure & Parentheses
Location: [[file:Resources/04-Structural-and-Parentheses.org]]
#+INCLUDE: "./Resources/04-Structural-and-Parentheses.org"                          

* Processing tables in org-files into elisp code
** String formatters
#+begin_src python :session mysess :cache no
def prefix_formatter(inputstr:str) -> str:
    if inputstr == "":
        return ""
    # if inputstr[0] == inputstr[-1] == "~":
    #     inputstr = inputstr[1:-1]   
    return inputstr.replace('~', '').replace('\\vert', '|')


def suffix_formatter(inputstr: str) -> str:
    if inputstr == "":
        return ""
    inputstr =  inputstr.replace('~', '').replace('\\vert', '|')
    if inputstr[0] == '+':
        inputstr = inputstr[1:]
    return inputstr
    

def translation_formatter(inputstr:str) -> str:
    if inputstr == "":
        return ""
    inputstr = inputstr.replace(
        '$', '').replace(
            ' ', '').replace(
                '\\Box', ' ').replace(
                    '{}', '').replace(
                        '~', '')
    return inputstr
#+end_src

#+RESULTS:

** Type 1 tables
#+begin_src python :session mysess :cache no
def process_t1(table, comment):
    print(f"\n;; --------------- {comment} --------------- ;;")
    header = table[0]
    num_column = len(header)
    for line in table[1:]:
        prefix = prefix_formatter(line[0])

        for j in range(1, num_column):
            key = repr(
                prefix + suffix_formatter(header[j])).replace("'", '"')
            trans = repr(
                translation_formatter(line[j])).replace("'", '"')
            print(f"({key:<7} [{trans:<17}])", end = ' ' if j % 2 == 1 else '\n')
        if (num_column%2 == 0):
            print('')
#+end_src

#+RESULTS:

** Type 2 tables
#+begin_src python :session mysess :cache no
def process_t2(table, comment):
    print(f"\n;; --------------- {comment} --------------- ;;")
    header = table[0]
    # num_column = len(header)
    for i,line in enumerate(table[1:]):
        key = repr(prefix_formatter(line[0])).replace("'", '"')
        trans = repr(translation_formatter(line[1])).replace("'", '"')
        print(f"({key:<7} [{trans:<17}])", end = ' ' if i % 2 == 0 else '\n')
#+end_src

#+RESULTS:


** Processing all above into el 
:PROPERTIES:
:header-args: :var tbl1_roman_upper=./Resources/01-Roman-Greek-Alphabets.org:table_roman_upper
:header-args+: :var tbl1_roman_lower=./Resources/01-Roman-Greek-Alphabets.org:table_roman_lower
:header-args+: :var tbl1_roman_ijvar=./Resources/01-Roman-Greek-Alphabets.org:table_roman_ijvar
:header-args+: :var tbl1_greek_upper=./Resources/01-Roman-Greek-Alphabets.org:table_greek_upper
:header-args+: :var tbl1_greek_lower=./Resources/01-Roman-Greek-Alphabets.org:table_greek_lower
:header-args+: :var tbl1_greek_varia=./Resources/01-Roman-Greek-Alphabets.org:table_greek_varia
:header-args+: :var tbl2_common_syms=./Resources/02-Symbols-and-their-modification.org:table_common_symbols
:header-args+: :var tbl2_simple_arith=./Resources/02-Symbols-and-their-modification.org:table_simple_arith
:header-args+: :var tbl2_bin_relation=./Resources/02-Symbols-and-their-modification.org:table_bin_relation
:header-args+: :var tbl2_set_symbols=./Resources/02-Symbols-and-their-modification.org:table_set_symbols
:header-args+: :var tbl2_set_rel_sym=./Resources/02-Symbols-and-their-modification.org:table_set_rel_sym
:header-args+: :var tbl2_logic_symbol=./Resources/02-Symbols-and-their-modification.org:table_logic_symbol
:header-args+: :var tbl2_single_arrow=./Resources/02-Symbols-and-their-modification.org:table_single_arrow
:header-args+: :var tbl2_double_arrow=./Resources/02-Symbols-and-their-modification.org:table_double_arrow
:header-args+: :var tbl2_long_arrow=./Resources/02-Symbols-and-their-modification.org:table_long_arrow
:header-args+: :var tbl2_3dot_symbol=./Resources/02-Symbols-and-their-modification.org:table_3dot_symbol
:header-args+: :var tbl2_geo_symbol=./Resources/02-Symbols-and-their-modification.org:table_geo_symbol
:header-args+: :var tbl2_spacing_sym=./Resources/02-Symbols-and-their-modification.org:table_spaicing_sym
:header-args+: :var tbl2_accent_names=./Resources/02-Symbols-and-their-modification.org:table_accent_names
:header-args+: :var tbl2_super_sub_sym=./Resources/02-Symbols-and-their-modification.org:table_super_sub_sym
:header-args+: :var tbl2_super_sub_09=./Resources/02-Symbols-and-their-modification.org:table_super_sub_09
:header-args+: :var tbl2_under_over_sym=./Resources/02-Symbols-and-their-modification.org:table_under_over_sym
:header-args+: :var tbl3_named_funcs=./Resources/03-Functions-Sum-Integral-Differential.org:table_named_functions
:header-args+: :var tbl3_trig_funcs=./Resources/03-Functions-Sum-Integral-Differential.org:table_trig_functions
:header-args+: :var tbl3_iter_tools=./Resources/03-Functions-Sum-Integral-Differential.org:table_iter_tools
:header-args+: :var tbl3_iter_funcs=./Resources/03-Functions-Sum-Integral-Differential.org:table_iter_functions
:header-args+: :var tbl3_differential=./Resources/03-Functions-Sum-Integral-Differential.org:table_differential_d
:header-args+: :var tbl3_derivatives=./Resources/03-Functions-Sum-Integral-Differential.org:table_derivatives
:header-args+: :var tbl4_elsip_func=./Resources/04-Structural-and-Parentheses.org:table_elisp_func
:header-args+: :var tbl4_parentheses=./Resources/04-Structural-and-Parentheses.org:table_parentheses
:header-args+: :var tbl4_text=./Resources/04-Structural-and-Parentheses.org:table_text
:header-args+: :var tbl4_xy=./Resources/04-Structural-and-Parentheses.org:table_xy
:END:

#+BEGIN_SRC python :session mysess :hlines no :results output code :wrap SRC elisp :results_switches ":tangle no :noweb yes" :exports none
process_t1(tbl1_roman_upper,     "Roman Upper")
process_t1(tbl1_roman_lower,     "Roman Lower")  
process_t1(tbl1_roman_ijvar,     "Roman ij math")
process_t1(tbl1_greek_upper,     "Greek Upper")
process_t1(tbl1_greek_lower,     "Greek Lower")
process_t1(tbl1_greek_varia,     "Greek variations")

process_t2(tbl2_common_syms,     "Common Symbols")
process_t2(tbl2_simple_arith,    "Simple Arithmetics")
process_t1(tbl2_bin_relation,    "Binary Relation")
process_t2(tbl2_set_symbols,     "Set Symbols")
process_t1(tbl2_set_rel_sym,     "Set Relation Symbols")
process_t1(tbl2_logic_symbol,    "Logic Symbols")
process_t1(tbl2_single_arrow,    "Single Line Arrows")
process_t1(tbl2_double_arrow,    "Double Line Arrows")
process_t2(tbl2_long_arrow,      "Long Arrows")
process_t2(tbl2_3dot_symbol,     "3 Dot variation")
process_t2(tbl2_geo_symbol,      "Geometry Symbols")
process_t2(tbl2_spacing_sym,     "Spacing Symbols")
process_t2(tbl2_accent_names,    "Accent names")
process_t2(tbl2_super_sub_sym,   "Super/Sub-scripts")
process_t1(tbl2_super_sub_09,    "Super/Sub-scripts 09")
process_t1(tbl2_under_over_sym,  "Under/Over")

process_t2(tbl3_named_funcs,     "Named Functinos")
process_t2(tbl3_trig_funcs,      "Trignometric Functinos")
process_t2(tbl3_iter_tools,      "Iteration Tools")
process_t1(tbl3_iter_funcs,      "Iteration Functions")
process_t1(tbl3_differential,    "Differential d")
process_t1(tbl3_derivatives,     "Derivatives")

process_t1(tbl4_parentheses,     "Parentheses")
process_t2(tbl4_text,            "Math Text")
process_t2(tbl4_xy,              "XY diagram")
#+END_SRC

#+name: el-from-table
#+RESULTS:
#+begin_SRC elisp

;; --------------- Roman Upper --------------- ;;
("Am"    ["\\mathbf{A}"    ]) ("Ab"    ["\\bar{A}"       ])
("Av"    ["\\vec{A}"       ]) ("Ah"    ["\\hat{A}"       ])
("Ad"    ["\\dot{A}"       ]) ("Add"   ["\\ddot{A}"      ])
("Addd"  ["\\dddot{A}"     ]) ("Adddd" ["\\ddddot{A}"    ])
("Ao"    ["\\mathring{A}"  ]) 
("Bm"    ["\\mathbf{B}"    ]) ("Bb"    ["\\bar{B}"       ])
("Bv"    ["\\vec{B}"       ]) ("Bh"    ["\\hat{B}"       ])
("Bd"    ["\\dot{B}"       ]) ("Bdd"   ["\\ddot{B}"      ])
("Bddd"  ["\\dddot{B}"     ]) ("Bdddd" ["\\ddddot{B}"    ])
("Bo"    ["\\mathring{B}"  ]) 
("Cm"    ["\\mathbf{C}"    ]) ("Cb"    ["\\bar{C}"       ])
("Cv"    ["\\vec{C}"       ]) ("Ch"    ["\\hat{C}"       ])
("Cd"    ["\\dot{C}"       ]) ("Cdd"   ["\\ddot{C}"      ])
("Cddd"  ["\\dddot{C}"     ]) ("Cdddd" ["\\ddddot{C}"    ])
("Co"    ["\\mathring{C}"  ]) 
("Dm"    ["\\mathbf{D}"    ]) ("Db"    ["\\bar{D}"       ])
("Dv"    ["\\vec{D}"       ]) ("Dh"    ["\\hat{D}"       ])
("Dd"    ["\\dot{D}"       ]) ("Ddd"   ["\\ddot{D}"      ])
("Dddd"  ["\\dddot{D}"     ]) ("Ddddd" ["\\ddddot{D}"    ])
("Do"    ["\\mathring{D}"  ]) 
("Em"    ["\\mathbf{E}"    ]) ("Eb"    ["\\bar{E}"       ])
("Ev"    ["\\vec{E}"       ]) ("Eh"    ["\\hat{E}"       ])
("Ed"    ["\\dot{E}"       ]) ("Edd"   ["\\ddot{E}"      ])
("Eddd"  ["\\dddot{E}"     ]) ("Edddd" ["\\ddddot{E}"    ])
("Eo"    ["\\mathring{E}"  ]) 
("Fm"    ["\\mathbf{F}"    ]) ("Fb"    ["\\bar{F}"       ])
("Fv"    ["\\vec{F}"       ]) ("Fh"    ["\\hat{F}"       ])
("Fd"    ["\\dot{F}"       ]) ("Fdd"   ["\\ddot{F}"      ])
("Fddd"  ["\\dddot{F}"     ]) ("Fdddd" ["\\ddddot{F}"    ])
("Fo"    ["\\mathring{F}"  ]) 
("Gm"    ["\\mathbf{G}"    ]) ("Gb"    ["\\bar{G}"       ])
("Gv"    ["\\vec{G}"       ]) ("Gh"    ["\\hat{G}"       ])
("Gd"    ["\\dot{G}"       ]) ("Gdd"   ["\\ddot{G}"      ])
("Gddd"  ["\\dddot{G}"     ]) ("Gdddd" ["\\ddddot{G}"    ])
("Go"    ["\\mathring{G}"  ]) 
("Hm"    ["\\mathbf{H}"    ]) ("Hb"    ["\\bar{H}"       ])
("Hv"    ["\\vec{H}"       ]) ("Hh"    ["\\hat{H}"       ])
("Hd"    ["\\dot{H}"       ]) ("Hdd"   ["\\ddot{H}"      ])
("Hddd"  ["\\dddot{H}"     ]) ("Hdddd" ["\\ddddot{H}"    ])
("Ho"    ["\\mathring{H}"  ]) 
("Im"    ["\\mathbf{I}"    ]) ("Ib"    ["\\bar{I}"       ])
("Iv"    ["\\vec{I}"       ]) ("Ih"    ["\\hat{I}"       ])
("Id"    ["\\dot{I}"       ]) ("Idd"   ["\\ddot{I}"      ])
("Iddd"  ["\\dddot{I}"     ]) ("Idddd" ["\\ddddot{I}"    ])
("Io"    ["\\mathring{I}"  ]) 
("Jm"    ["\\mathbf{J}"    ]) ("Jb"    ["\\bar{J}"       ])
("Jv"    ["\\vec{J}"       ]) ("Jh"    ["\\hat{J}"       ])
("Jd"    ["\\dot{J}"       ]) ("Jdd"   ["\\ddot{J}"      ])
("Jddd"  ["\\dddot{J}"     ]) ("Jdddd" ["\\ddddot{J}"    ])
("Jo"    ["\\mathring{J}"  ]) 
("Km"    ["\\mathbf{K}"    ]) ("Kb"    ["\\bar{K}"       ])
("Kv"    ["\\vec{K}"       ]) ("Kh"    ["\\hat{K}"       ])
("Kd"    ["\\dot{K}"       ]) ("Kdd"   ["\\ddot{K}"      ])
("Kddd"  ["\\dddot{K}"     ]) ("Kdddd" ["\\ddddot{K}"    ])
("Ko"    ["\\mathring{K}"  ]) 
("Lm"    ["\\mathbf{L}"    ]) ("Lb"    ["\\bar{L}"       ])
("Lv"    ["\\vec{L}"       ]) ("Lh"    ["\\hat{L}"       ])
("Ld"    ["\\dot{L}"       ]) ("Ldd"   ["\\ddot{L}"      ])
("Lddd"  ["\\dddot{L}"     ]) ("Ldddd" ["\\ddddot{L}"    ])
("Lo"    ["\\mathring{L}"  ]) 
("Mm"    ["\\mathbf{M}"    ]) ("Mb"    ["\\bar{M}"       ])
("Mv"    ["\\vec{M}"       ]) ("Mh"    ["\\hat{M}"       ])
("Md"    ["\\dot{M}"       ]) ("Mdd"   ["\\ddot{M}"      ])
("Mddd"  ["\\dddot{M}"     ]) ("Mdddd" ["\\ddddot{M}"    ])
("Mo"    ["\\mathring{M}"  ]) 
("Nm"    ["\\mathbf{N}"    ]) ("Nb"    ["\\bar{N}"       ])
("Nv"    ["\\vec{N}"       ]) ("Nh"    ["\\hat{N}"       ])
("Nd"    ["\\dot{N}"       ]) ("Ndd"   ["\\ddot{N}"      ])
("Nddd"  ["\\dddot{N}"     ]) ("Ndddd" ["\\ddddot{N}"    ])
("No"    ["\\mathring{N}"  ]) 
("Om"    ["\\mathbf{O}"    ]) ("Ob"    ["\\bar{O}"       ])
("Ov"    ["\\vec{O}"       ]) ("Oh"    ["\\hat{O}"       ])
("Od"    ["\\dot{O}"       ]) ("Odd"   ["\\ddot{O}"      ])
("Oddd"  ["\\dddot{O}"     ]) ("Odddd" ["\\ddddot{O}"    ])
("Oo"    ["\\mathring{O}"  ]) 
("Pm"    ["\\mathbf{P}"    ]) ("Pb"    ["\\bar{P}"       ])
("Pv"    ["\\vec{P}"       ]) ("Ph"    ["\\hat{P}"       ])
("Pd"    ["\\dot{P}"       ]) ("Pdd"   ["\\ddot{P}"      ])
("Pddd"  ["\\dddot{P}"     ]) ("Pdddd" ["\\ddddot{P}"    ])
("Po"    ["\\mathring{P}"  ]) 
("Qm"    ["\\mathbf{Q}"    ]) ("Qb"    ["\\bar{Q}"       ])
("Qv"    ["\\vec{Q}"       ]) ("Qh"    ["\\hat{Q}"       ])
("Qd"    ["\\dot{Q}"       ]) ("Qdd"   ["\\ddot{Q}"      ])
("Qddd"  ["\\dddot{Q}"     ]) ("Qdddd" ["\\ddddot{Q}"    ])
("Qo"    ["\\mathring{Q}"  ]) 
("Rm"    ["\\mathbf{R}"    ]) ("Rb"    ["\\bar{R}"       ])
("Rv"    ["\\vec{R}"       ]) ("Rh"    ["\\hat{R}"       ])
("Rd"    ["\\dot{R}"       ]) ("Rdd"   ["\\ddot{R}"      ])
("Rddd"  ["\\dddot{R}"     ]) ("Rdddd" ["\\ddddot{R}"    ])
("Ro"    ["\\mathring{R}"  ]) 
("Sm"    ["\\mathbf{S}"    ]) ("Sb"    ["\\bar{S}"       ])
("Sv"    ["\\vec{S}"       ]) ("Sh"    ["\\hat{S}"       ])
("Sd"    ["\\dot{S}"       ]) ("Sdd"   ["\\ddot{S}"      ])
("Sddd"  ["\\dddot{S}"     ]) ("Sdddd" ["\\ddddot{S}"    ])
("So"    ["\\mathring{S}"  ]) 
("Tm"    ["\\mathbf{T}"    ]) ("Tb"    ["\\bar{T}"       ])
("Tv"    ["\\vec{T}"       ]) ("Th"    ["\\hat{T}"       ])
("Td"    ["\\dot{T}"       ]) ("Tdd"   ["\\ddot{T}"      ])
("Tddd"  ["\\dddot{T}"     ]) ("Tdddd" ["\\ddddot{T}"    ])
("To"    ["\\mathring{T}"  ]) 
("Um"    ["\\mathbf{U}"    ]) ("Ub"    ["\\bar{U}"       ])
("Uv"    ["\\vec{U}"       ]) ("Uh"    ["\\hat{U}"       ])
("Ud"    ["\\dot{U}"       ]) ("Udd"   ["\\ddot{U}"      ])
("Uddd"  ["\\dddot{U}"     ]) ("Udddd" ["\\ddddot{U}"    ])
("Uo"    ["\\mathring{U}"  ]) 
("Vm"    ["\\mathbf{V}"    ]) ("Vb"    ["\\bar{V}"       ])
("Vv"    ["\\vec{V}"       ]) ("Vh"    ["\\hat{V}"       ])
("Vd"    ["\\dot{V}"       ]) ("Vdd"   ["\\ddot{V}"      ])
("Vddd"  ["\\dddot{V}"     ]) ("Vdddd" ["\\ddddot{V}"    ])
("Vo"    ["\\mathring{V}"  ]) 
("Wm"    ["\\mathbf{W}"    ]) ("Wb"    ["\\bar{W}"       ])
("Wv"    ["\\vec{W}"       ]) ("Wh"    ["\\hat{W}"       ])
("Wd"    ["\\dot{W}"       ]) ("Wdd"   ["\\ddot{W}"      ])
("Wddd"  ["\\dddot{W}"     ]) ("Wdddd" ["\\ddddot{W}"    ])
("Wo"    ["\\mathring{W}"  ]) 
("Xm"    ["\\mathbf{X}"    ]) ("Xb"    ["\\bar{X}"       ])
("Xv"    ["\\vec{X}"       ]) ("Xh"    ["\\hat{X}"       ])
("Xd"    ["\\dot{X}"       ]) ("Xdd"   ["\\ddot{X}"      ])
("Xddd"  ["\\dddot{X}"     ]) ("Xdddd" ["\\ddddot{X}"    ])
("Xo"    ["\\mathring{X}"  ]) 
("Ym"    ["\\mathbf{Y}"    ]) ("Yb"    ["\\bar{Y}"       ])
("Yv"    ["\\vec{Y}"       ]) ("Yh"    ["\\hat{Y}"       ])
("Yd"    ["\\dot{Y}"       ]) ("Ydd"   ["\\ddot{Y}"      ])
("Yddd"  ["\\dddot{Y}"     ]) ("Ydddd" ["\\ddddot{Y}"    ])
("Yo"    ["\\mathring{Y}"  ]) 
("Zm"    ["\\mathbf{Z}"    ]) ("Zb"    ["\\bar{Z}"       ])
("Zv"    ["\\vec{Z}"       ]) ("Zh"    ["\\hat{Z}"       ])
("Zd"    ["\\dot{Z}"       ]) ("Zdd"   ["\\ddot{Z}"      ])
("Zddd"  ["\\dddot{Z}"     ]) ("Zdddd" ["\\ddddot{Z}"    ])
("Zo"    ["\\mathring{Z}"  ]) 

;; --------------- Roman Lower --------------- ;;
("am"    ["\\mathbf{a}"    ]) ("ab"    ["\\bar{a}"       ])
("av"    ["\\vec{a}"       ]) ("ah"    ["\\hat{a}"       ])
("ad"    ["\\dot{a}"       ]) ("add"   ["\\ddot{a}"      ])
("addd"  ["\\dddot{a}"     ]) ("adddd" ["\\ddddot{a}"    ])
("ao"    ["\\mathring{a}"  ]) 
("bm"    ["\\mathbf{b}"    ]) ("bb"    ["\\bar{b}"       ])
("bv"    ["\\vec{b}"       ]) ("bh"    ["\\hat{b}"       ])
("bd"    ["\\dot{b}"       ]) ("bdd"   ["\\ddot{b}"      ])
("bddd"  ["\\dddot{b}"     ]) ("bdddd" ["\\ddddot{b}"    ])
("bo"    ["\\mathring{b}"  ]) 
("cm"    ["\\mathbf{c}"    ]) ("cb"    ["\\bar{c}"       ])
("cv"    ["\\vec{c}"       ]) ("ch"    ["\\hat{c}"       ])
("cd"    ["\\dot{c}"       ]) ("cdd"   ["\\ddot{c}"      ])
("cddd"  ["\\dddot{c}"     ]) ("cdddd" ["\\ddddot{c}"    ])
("co"    ["\\mathring{c}"  ]) 
("dm"    ["\\mathbf{d}"    ]) ("db"    ["\\bar{d}"       ])
("dv"    ["\\vec{d}"       ]) ("dh"    ["\\hat{d}"       ])
("dd"    ["\\dot{d}"       ]) ("ddd"   ["\\ddot{d}"      ])
("dddd"  ["\\dddot{d}"     ]) ("ddddd" ["\\ddddot{d}"    ])
("do"    ["\\mathring{d}"  ]) 
("em"    ["\\mathbf{e}"    ]) ("eb"    ["\\bar{e}"       ])
("ev"    ["\\vec{e}"       ]) ("eh"    ["\\hat{e}"       ])
("ed"    ["\\dot{e}"       ]) ("edd"   ["\\ddot{e}"      ])
("eddd"  ["\\dddot{e}"     ]) ("edddd" ["\\ddddot{e}"    ])
("eo"    ["\\mathring{e}"  ]) 
("fm"    ["\\mathbf{f}"    ]) ("fb"    ["\\bar{f}"       ])
("fv"    ["\\vec{f}"       ]) ("fh"    ["\\hat{f}"       ])
("fd"    ["\\dot{f}"       ]) ("fdd"   ["\\ddot{f}"      ])
("fddd"  ["\\dddot{f}"     ]) ("fdddd" ["\\ddddot{f}"    ])
("fo"    ["\\mathring{f}"  ]) 
("gm"    ["\\mathbf{g}"    ]) ("gb"    ["\\bar{g}"       ])
("gv"    ["\\vec{g}"       ]) ("gh"    ["\\hat{g}"       ])
("gd"    ["\\dot{g}"       ]) ("gdd"   ["\\ddot{g}"      ])
("gddd"  ["\\dddot{g}"     ]) ("gdddd" ["\\ddddot{g}"    ])
("go"    ["\\mathring{g}"  ]) 
("hm"    ["\\mathbf{h}"    ]) ("hb"    ["\\bar{h}"       ])
("hv"    ["\\vec{h}"       ]) ("hh"    ["\\hat{h}"       ])
("hd"    ["\\dot{h}"       ]) ("hdd"   ["\\ddot{h}"      ])
("hddd"  ["\\dddot{h}"     ]) ("hdddd" ["\\ddddot{h}"    ])
("ho"    ["\\mathring{h}"  ]) 
("im"    ["\\mathbf{i}"    ]) ("ib"    ["\\bar{i}"       ])
("iv"    ["\\vec{i}"       ]) ("ih"    ["\\hat{i}"       ])
("id"    ["\\dot{i}"       ]) ("idd"   ["\\ddot{i}"      ])
("iddd"  ["\\dddot{i}"     ]) ("idddd" ["\\ddddot{i}"    ])
("io"    ["\\mathring{i}"  ]) 
("jm"    ["\\mathbf{j}"    ]) ("jb"    ["\\bar{j}"       ])
("jv"    ["\\vec{j}"       ]) ("jh"    ["\\hat{j}"       ])
("jd"    ["\\dot{j}"       ]) ("jdd"   ["\\ddot{j}"      ])
("jddd"  ["\\dddot{j}"     ]) ("jdddd" ["\\ddddot{j}"    ])
("jo"    ["\\mathring{j}"  ]) 
("km"    ["\\mathbf{k}"    ]) ("kb"    ["\\bar{k}"       ])
("kv"    ["\\vec{k}"       ]) ("kh"    ["\\hat{k}"       ])
("kd"    ["\\dot{k}"       ]) ("kdd"   ["\\ddot{k}"      ])
("kddd"  ["\\dddot{k}"     ]) ("kdddd" ["\\ddddot{k}"    ])
("ko"    ["\\mathring{k}"  ]) 
("lm"    ["\\mathbf{l}"    ]) ("lb"    ["\\bar{l}"       ])
("lv"    ["\\vec{l}"       ]) ("lh"    ["\\hat{l}"       ])
("ld"    ["\\dot{l}"       ]) ("ldd"   ["\\ddot{l}"      ])
("lddd"  ["\\dddot{l}"     ]) ("ldddd" ["\\ddddot{l}"    ])
("lo"    ["\\mathring{l}"  ]) 
("mm"    ["\\mathbf{m}"    ]) ("mb"    ["\\bar{m}"       ])
("mv"    ["\\vec{m}"       ]) ("mh"    ["\\hat{m}"       ])
("md"    ["\\dot{m}"       ]) ("mdd"   ["\\ddot{m}"      ])
("mddd"  ["\\dddot{m}"     ]) ("mdddd" ["\\ddddot{m}"    ])
("mo"    ["\\mathring{m}"  ]) 
("nm"    ["\\mathbf{n}"    ]) ("nb"    ["\\bar{n}"       ])
("nv"    ["\\vec{n}"       ]) ("nh"    ["\\hat{n}"       ])
("nd"    ["\\dot{n}"       ]) ("ndd"   ["\\ddot{n}"      ])
("nddd"  ["\\dddot{n}"     ]) ("ndddd" ["\\ddddot{n}"    ])
("no"    ["\\mathring{n}"  ]) 
("om"    ["\\mathbf{o}"    ]) ("ob"    ["\\bar{o}"       ])
("ov"    ["\\vec{o}"       ]) ("oh"    ["\\hat{o}"       ])
("od"    ["\\dot{o}"       ]) ("odd"   ["\\ddot{o}"      ])
("oddd"  ["\\dddot{o}"     ]) ("odddd" ["\\ddddot{o}"    ])
("oo"    ["\\mathring{o}"  ]) 
("pm"    ["\\mathbf{p}"    ]) ("pb"    ["\\bar{p}"       ])
("pv"    ["\\vec{p}"       ]) ("ph"    ["\\hat{p}"       ])
("pd"    ["\\dot{p}"       ]) ("pdd"   ["\\ddot{p}"      ])
("pddd"  ["\\dddot{p}"     ]) ("pdddd" ["\\ddddot{p}"    ])
("po"    ["\\mathring{p}"  ]) 
("qm"    ["\\mathbf{q}"    ]) ("qb"    ["\\bar{q}"       ])
("qv"    ["\\vec{q}"       ]) ("qh"    ["\\hat{q}"       ])
("qd"    ["\\dot{q}"       ]) ("qdd"   ["\\ddot{q}"      ])
("qddd"  ["\\dddot{q}"     ]) ("qdddd" ["\\ddddot{q}"    ])
("qo"    ["\\mathring{q}"  ]) 
("rm"    ["\\mathbf{r}"    ]) ("rb"    ["\\bar{r}"       ])
("rv"    ["\\vec{r}"       ]) ("rh"    ["\\hat{r}"       ])
("rd"    ["\\dot{r}"       ]) ("rdd"   ["\\ddot{r}"      ])
("rddd"  ["\\dddot{r}"     ]) ("rdddd" ["\\ddddot{r}"    ])
("ro"    ["\\mathring{r}"  ]) 
("sm"    ["\\mathbf{s}"    ]) ("sb"    ["\\bar{s}"       ])
("sv"    ["\\vec{s}"       ]) ("sh"    ["\\hat{s}"       ])
("sd"    ["\\dot{s}"       ]) ("sdd"   ["\\ddot{s}"      ])
("sddd"  ["\\dddot{s}"     ]) ("sdddd" ["\\ddddot{s}"    ])
("so"    ["\\mathring{s}"  ]) 
("tm"    ["\\mathbf{t}"    ]) ("tb"    ["\\bar{t}"       ])
("tv"    ["\\vec{t}"       ]) ("th"    ["\\hat{t}"       ])
("td"    ["\\dot{t}"       ]) ("tdd"   ["\\ddot{t}"      ])
("tddd"  ["\\dddot{t}"     ]) ("tdddd" ["\\ddddot{t}"    ])
("to"    ["\\mathring{t}"  ]) 
("um"    ["\\mathbf{u}"    ]) ("ub"    ["\\bar{u}"       ])
("uv"    ["\\vec{u}"       ]) ("uh"    ["\\hat{u}"       ])
("ud"    ["\\dot{u}"       ]) ("udd"   ["\\ddot{u}"      ])
("uddd"  ["\\dddot{u}"     ]) ("udddd" ["\\ddddot{u}"    ])
("uo"    ["\\mathring{u}"  ]) 
("vm"    ["\\mathbf{v}"    ]) ("vb"    ["\\bar{v}"       ])
("vv"    ["\\vec{v}"       ]) ("vh"    ["\\hat{v}"       ])
("vd"    ["\\dot{v}"       ]) ("vdd"   ["\\ddot{v}"      ])
("vddd"  ["\\dddot{v}"     ]) ("vdddd" ["\\ddddot{v}"    ])
("vo"    ["\\mathring{v}"  ]) 
("wm"    ["\\mathbf{w}"    ]) ("wb"    ["\\bar{w}"       ])
("wv"    ["\\vec{w}"       ]) ("wh"    ["\\hat{w}"       ])
("wd"    ["\\dot{w}"       ]) ("wdd"   ["\\ddot{w}"      ])
("wddd"  ["\\dddot{w}"     ]) ("wdddd" ["\\ddddot{w}"    ])
("wo"    ["\\mathring{w}"  ]) 
("xm"    ["\\mathbf{x}"    ]) ("xb"    ["\\bar{x}"       ])
("xv"    ["\\vec{x}"       ]) ("xh"    ["\\hat{x}"       ])
("xd"    ["\\dot{x}"       ]) ("xdd"   ["\\ddot{x}"      ])
("xddd"  ["\\dddot{x}"     ]) ("xdddd" ["\\ddddot{x}"    ])
("xo"    ["\\mathring{x}"  ]) 
("ym"    ["\\mathbf{y}"    ]) ("yb"    ["\\bar{y}"       ])
("yv"    ["\\vec{y}"       ]) ("yh"    ["\\hat{y}"       ])
("yd"    ["\\dot{y}"       ]) ("ydd"   ["\\ddot{y}"      ])
("yddd"  ["\\dddot{y}"     ]) ("ydddd" ["\\ddddot{y}"    ])
("yo"    ["\\mathring{y}"  ]) 
("zm"    ["\\mathbf{z}"    ]) ("zb"    ["\\bar{z}"       ])
("zv"    ["\\vec{z}"       ]) ("zh"    ["\\hat{z}"       ])
("zd"    ["\\dot{z}"       ]) ("zdd"   ["\\ddot{z}"      ])
("zddd"  ["\\dddot{z}"     ]) ("zdddd" ["\\ddddot{z}"    ])
("zo"    ["\\mathring{z}"  ]) 

;; --------------- Roman ij math --------------- ;;
("i.."   ["\\imath"        ]) ("i..b"  ["\\bar{\\imath}" ])
("i..v"  ["\\vec{\\imath}" ]) ("i..h"  ["\\hat{\\imath}" ])
("i..d"  ["\\dot{\\imath}" ]) ("i..dd" ["\\ddot{\\imath}"])
("i..ddd" ["\\dddot{\\imath}"]) ("i..dddd" ["\\ddddot{\\imath}"])
("i..o"  ["\\mathring{\\imath}"]) 
("j.."   ["\\jmath"        ]) ("j..b"  ["\\bar{\\jmath}" ])
("j..v"  ["\\vec{\\jmath}" ]) ("j..h"  ["\\hat{\\jmath}" ])
("j..d"  ["\\dot{\\jmath}" ]) ("j..dd" ["\\ddot{\\jmath}"])
("j..ddd" ["\\dddot{\\jmath}"]) ("j..dddd" ["\\ddddot{\\jmath}"])
("j..o"  ["\\mathring{\\jmath}"]) 

;; --------------- Greek Upper --------------- ;;
("A."    ["A"              ]) ("A.b"   ["\\bar{A}"       ])
("A.v"   ["\\vec{A}"       ]) ("A.h"   ["\\hat{A}"       ])
("A.d"   ["\\dot{A}"       ]) ("A.dd"  ["\\ddot{A}"      ])
("A.ddd" ["\\dddot{A}"     ]) ("A.dddd" ["\\ddddot{A}"    ])
("A.o"   ["\\mathring{A}"  ]) 
("B."    ["B"              ]) ("B.b"   ["\\bar{B}"       ])
("B.v"   ["\\vec{B}"       ]) ("B.h"   ["\\hat{B}"       ])
("B.d"   ["\\dot{B}"       ]) ("B.dd"  ["\\ddot{B}"      ])
("B.ddd" ["\\dddot{B}"     ]) ("B.dddd" ["\\ddddot{B}"    ])
("B.o"   ["\\mathring{B}"  ]) 
("C."    ["\\Psi"          ]) ("C.b"   ["\\bar{\\Psi}"   ])
("C.v"   ["\\vec{\\Psi}"   ]) ("C.h"   ["\\hat{\\Psi}"   ])
("C.d"   ["\\dot{\\Psi}"   ]) ("C.dd"  ["\\ddot{\\Psi}"  ])
("C.ddd" ["\\dddot{\\Psi}" ]) ("C.dddd" ["\\ddddot{\\Psi}"])
("C.o"   ["\\mathring{\\Psi}"]) 
("D."    ["\\Delta"        ]) ("D.b"   ["\\bar{\\Delta}" ])
("D.v"   ["\\vec{\\Delta}" ]) ("D.h"   ["\\hat{\\Delta}" ])
("D.d"   ["\\dot{\\Delta}" ]) ("D.dd"  ["\\ddot{\\Delta}"])
("D.ddd" ["\\dddot{\\Delta}"]) ("D.dddd" ["\\ddddot{\\Delta}"])
("D.o"   ["\\mathring{\\Delta}"]) 
("E."    ["E"              ]) ("E.b"   ["\\bar{E}"       ])
("E.v"   ["\\vec{E}"       ]) ("E.h"   ["\\hat{E}"       ])
("E.d"   ["\\dot{E}"       ]) ("E.dd"  ["\\ddot{E}"      ])
("E.ddd" ["\\dddot{E}"     ]) ("E.dddd" ["\\ddddot{E}"    ])
("E.o"   ["\\mathring{E}"  ]) 
("F."    ["\\Phi"          ]) ("F.b"   ["\\bar{\\Phi}"   ])
("F.v"   ["\\vec{\\Phi}"   ]) ("F.h"   ["\\hat{\\Phi}"   ])
("F.d"   ["\\dot{\\Phi}"   ]) ("F.dd"  ["\\ddot{\\Phi}"  ])
("F.ddd" ["\\dddot{\\Phi}" ]) ("F.dddd" ["\\ddddot{\\Phi}"])
("F.o"   ["\\mathring{\\Phi}"]) 
("G."    ["\\Gamma"        ]) ("G.b"   ["\\bar{\\Gamma}" ])
("G.v"   ["\\vec{\\Gamma}" ]) ("G.h"   ["\\hat{\\Gamma}" ])
("G.d"   ["\\dot{\\Gamma}" ]) ("G.dd"  ["\\ddot{\\Gamma}"])
("G.ddd" ["\\dddot{\\Gamma}"]) ("G.dddd" ["\\ddddot{\\Gamma}"])
("G.o"   ["\\mathring{\\Gamma}"]) 
("H."    ["H"              ]) ("H.b"   ["\\bar{H}"       ])
("H.v"   ["\\vec{H}"       ]) ("H.h"   ["\\hat{H}"       ])
("H.d"   ["\\dot{H}"       ]) ("H.dd"  ["\\ddot{H}"      ])
("H.ddd" ["\\dddot{H}"     ]) ("H.dddd" ["\\ddddot{H}"    ])
("H.o"   ["\\mathring{H}"  ]) 
("I."    ["I"              ]) ("I.b"   ["\\bar{I}"       ])
("I.v"   ["\\vec{I}"       ]) ("I.h"   ["\\hat{I}"       ])
("I.d"   ["\\dot{I}"       ]) ("I.dd"  ["\\ddot{I}"      ])
("I.ddd" ["\\dddot{I}"     ]) ("I.dddd" ["\\ddddot{I}"    ])
("I.o"   ["\\mathring{I}"  ]) 
("J."    ["\\Xi"           ]) ("J.b"   ["\\bar{\\Xi}"    ])
("J.v"   ["\\vec{\\Xi}"    ]) ("J.h"   ["\\hat{\\Xi}"    ])
("J.d"   ["\\dot{\\Xi}"    ]) ("J.dd"  ["\\ddot{\\Xi}"   ])
("J.ddd" ["\\dddot{\\Xi}"  ]) ("J.dddd" ["\\ddddot{\\Xi}" ])
("J.o"   ["\\mathring{\\Xi}"]) 
("K."    ["K"              ]) ("K.b"   ["\\bar{K}"       ])
("K.v"   ["\\vec{K}"       ]) ("K.h"   ["\\hat{K}"       ])
("K.d"   ["\\dot{K}"       ]) ("K.dd"  ["\\ddot{K}"      ])
("K.ddd" ["\\dddot{K}"     ]) ("K.dddd" ["\\ddddot{K}"    ])
("K.o"   ["\\mathring{K}"  ]) 
("L."    ["\\Lambda"       ]) ("L.b"   ["\\bar{\\Lambda}"])
("L.v"   ["\\vec{\\Lambda}"]) ("L.h"   ["\\hat{\\Lambda}"])
("L.d"   ["\\dot{\\Lambda}"]) ("L.dd"  ["\\ddot{\\Lambda}"])
("L.ddd" ["\\dddot{\\Lambda}"]) ("L.dddd" ["\\ddddot{\\Lambda}"])
("L.o"   ["\\mathring{\\Lambda}"]) 
("M."    ["M"              ]) ("M.b"   ["\\bar{M}"       ])
("M.v"   ["\\vec{M}"       ]) ("M.h"   ["\\hat{M}"       ])
("M.d"   ["\\dot{M}"       ]) ("M.dd"  ["\\ddot{M}"      ])
("M.ddd" ["\\dddot{M}"     ]) ("M.dddd" ["\\ddddot{M}"    ])
("M.o"   ["\\mathring{M}"  ]) 
("N."    ["N"              ]) ("N.b"   ["\\bar{N}"       ])
("N.v"   ["\\vec{N}"       ]) ("N.h"   ["\\hat{N}"       ])
("N.d"   ["\\dot{N}"       ]) ("N.dd"  ["\\ddot{N}"      ])
("N.ddd" ["\\dddot{N}"     ]) ("N.dddd" ["\\ddddot{N}"    ])
("N.o"   ["\\mathring{N}"  ]) 
("O."    ["O"              ]) ("O.b"   ["\\bar{O}"       ])
("O.v"   ["\\vec{O}"       ]) ("O.h"   ["\\hat{O}"       ])
("O.d"   ["\\dot{O}"       ]) ("O.dd"  ["\\ddot{O}"      ])
("O.ddd" ["\\dddot{O}"     ]) ("O.dddd" ["\\ddddot{O}"    ])
("O.o"   ["\\mathring{O}"  ]) 
("P."    ["\\Pi"           ]) ("P.b"   ["\\bar{\\Pi}"    ])
("P.v"   ["\\vec{\\Pi}"    ]) ("P.h"   ["\\hat{\\Pi}"    ])
("P.d"   ["\\dot{\\Pi}"    ]) ("P.dd"  ["\\ddot{\\Pi}"   ])
("P.ddd" ["\\dddot{\\Pi}"  ]) ("P.dddd" ["\\ddddot{\\Pi}" ])
("P.o"   ["\\mathring{\\Pi}"]) 
("R."    ["P"              ]) ("R.b"   ["\\bar{P}"       ])
("R.v"   ["\\vec{P}"       ]) ("R.h"   ["\\hat{P}"       ])
("R.d"   ["\\dot{P}"       ]) ("R.dd"  ["\\ddot{P}"      ])
("R.ddd" ["\\dddot{P}"     ]) ("R.dddd" ["\\ddddot{P}"    ])
("R.o"   ["\\mathring{P}"  ]) 
("S."    ["\\Sigma"        ]) ("S.b"   ["\\bar{\\Sigma}" ])
("S.v"   ["\\vec{\\Sigma}" ]) ("S.h"   ["\\hat{\\Sigma}" ])
("S.d"   ["\\dot{\\Sigma}" ]) ("S.dd"  ["\\ddot{\\Sigma}"])
("S.ddd" ["\\dddot{\\Sigma}"]) ("S.dddd" ["\\ddddot{\\Sigma}"])
("S.o"   ["\\mathring{\\Sigma}"]) 
("T."    ["T"              ]) ("T.b"   ["\\bar{T}"       ])
("T.v"   ["\\vec{T}"       ]) ("T.h"   ["\\hat{T}"       ])
("T.d"   ["\\dot{T}"       ]) ("T.dd"  ["\\ddot{T}"      ])
("T.ddd" ["\\dddot{T}"     ]) ("T.dddd" ["\\ddddot{T}"    ])
("T.o"   ["\\mathring{T}"  ]) 
("Th."   ["\\Theta"        ]) ("Th.b"  ["\\bar{\\Theta}" ])
("Th.v"  ["\\vec{\\Theta}" ]) ("Th.h"  ["\\hat{\\Theta}" ])
("Th.d"  ["\\dot{\\Theta}" ]) ("Th.dd" ["\\ddot{\\Theta}"])
("Th.ddd" ["\\dddot{\\Theta}"]) ("Th.dddd" ["\\ddddot{\\Theta}"])
("Th.o"  ["\\mathring{\\Theta}"]) 
("U."    ["\\Upsilon"      ]) ("U.b"   ["\\bar{\\Upsilon}"])
("U.v"   ["\\vec{\\Upsilon}"]) ("U.h"   ["\\hat{\\Upsilon}"])
("U.d"   ["\\dot{\\Upsilon}"]) ("U.dd"  ["\\ddot{\\Upsilon}"])
("U.ddd" ["\\dddot{\\Upsilon}"]) ("U.dddd" ["\\ddddot{\\Upsilon}"])
("U.o"   ["\\mathring{\\Upsilon}"]) 
("W."    ["\\Omega"        ]) ("W.b"   ["\\bar{\\Omega}" ])
("W.v"   ["\\vec{\\Omega}" ]) ("W.h"   ["\\hat{\\Omega}" ])
("W.d"   ["\\dot{\\Omega}" ]) ("W.dd"  ["\\ddot{\\Omega}"])
("W.ddd" ["\\dddot{\\Omega}"]) ("W.dddd" ["\\ddddot{\\Omega}"])
("W.o"   ["\\mathring{\\Omega}"]) 
("X."    ["X"              ]) ("X.b"   ["\\bar{X}"       ])
("X.v"   ["\\vec{X}"       ]) ("X.h"   ["\\hat{X}"       ])
("X.d"   ["\\dot{X}"       ]) ("X.dd"  ["\\ddot{X}"      ])
("X.ddd" ["\\dddot{X}"     ]) ("X.dddd" ["\\ddddot{X}"    ])
("X.o"   ["\\mathring{X}"  ]) 
("Z."    ["Z"              ]) ("Z.b"   ["\\bar{Z}"       ])
("Z.v"   ["\\vec{Z}"       ]) ("Z.h"   ["\\hat{Z}"       ])
("Z.d"   ["\\dot{Z}"       ]) ("Z.dd"  ["\\ddot{Z}"      ])
("Z.ddd" ["\\dddot{Z}"     ]) ("Z.dddd" ["\\ddddot{Z}"    ])
("Z.o"   ["\\mathring{Z}"  ]) 

;; --------------- Greek Lower --------------- ;;
("a."    ["\\alpha"        ]) ("a.b"   ["\\bar{\\alpha}" ])
("a.v"   ["\\vec{\\alpha}" ]) ("a.h"   ["\\hat{\\alpha}" ])
("a.d"   ["\\dot{\\alpha}" ]) ("a.dd"  ["\\ddot{\\alpha}"])
("a.ddd" ["\\dddot{\\alpha}"]) ("a.dddd" ["\\ddddot{\\alpha}"])
("a.o"   ["\\mathring{\\alpha}"]) 
("a."    ["\\beta"         ]) ("a.b"   ["\\bar{\\beta}"  ])
("a.v"   ["\\vec{\\beta}"  ]) ("a.h"   ["\\hat{\\beta}"  ])
("a.d"   ["\\dot{\\beta}"  ]) ("a.dd"  ["\\ddot{\\beta}" ])
("a.ddd" ["\\dddot{\\beta}"]) ("a.dddd" ["\\ddddot{\\beta}"])
("a.o"   ["\\mathring{\\beta}"]) 
("c."    ["\\psi"          ]) ("c.b"   ["\\bar{\\psi}"   ])
("c.v"   ["\\vec{\\psi}"   ]) ("c.h"   ["\\hat{\\psi}"   ])
("c.d"   ["\\dot{\\psi}"   ]) ("c.dd"  ["\\ddot{\\psi}"  ])
("c.ddd" ["\\dddot{\\psi}" ]) ("c.dddd" ["\\ddddot{\\psi}"])
("c.o"   ["\\mathring{\\psi}"]) 
("d."    ["\\delta"        ]) ("d.b"   ["\\bar{\\delta}" ])
("d.v"   ["\\vec{\\delta}" ]) ("d.h"   ["\\hat{\\delta}" ])
("d.d"   ["\\dot{\\delta}" ]) ("d.dd"  ["\\ddot{\\delta}"])
("d.ddd" ["\\dddot{\\delta}"]) ("d.dddd" ["\\ddddot{\\delta}"])
("d.o"   ["\\mathring{\\delta}"]) 
("e."    ["\\epsilon"      ]) ("e.b"   ["\\bar{\\epsilon}"])
("e.v"   ["\\vec{\\epsilon}"]) ("e.h"   ["\\hat{\\epsilon}"])
("e.d"   ["\\dot{\\epsilon}"]) ("e.dd"  ["\\ddot{\\epsilon}"])
("e.ddd" ["\\dddot{\\epsilon}"]) ("e.dddd" ["\\ddddot{\\epsilon}"])
("e.o"   ["\\mathring{\\epsilon}"]) 
("f."    ["\\phi"          ]) ("f.b"   ["\\bar{\\phi}"   ])
("f.v"   ["\\vec{\\phi}"   ]) ("f.h"   ["\\hat{\\phi}"   ])
("f.d"   ["\\dot{\\phi}"   ]) ("f.dd"  ["\\ddot{\\phi}"  ])
("f.ddd" ["\\dddot{\\phi}" ]) ("f.dddd" ["\\ddddot{\\phi}"])
("f.o"   ["\\mathring{\\phi}"]) 
("g."    ["\\gamma"        ]) ("g.b"   ["\\bar{\\gamma}" ])
("g.v"   ["\\vec{\\gamma}" ]) ("g.h"   ["\\hat{\\gamma}" ])
("g.d"   ["\\dot{\\gamma}" ]) ("g.dd"  ["\\ddot{\\gamma}"])
("g.ddd" ["\\dddot{\\gamma}"]) ("g.dddd" ["\\ddddot{\\gamma}"])
("g.o"   ["\\mathring{\\gamma}"]) 
("h."    ["\\eta"          ]) ("h.b"   ["\\bar{\\eta}"   ])
("h.v"   ["\\vec{\\eta}"   ]) ("h.h"   ["\\hat{\\eta}"   ])
("h.d"   ["\\dot{\\eta}"   ]) ("h.dd"  ["\\ddot{\\eta}"  ])
("h.ddd" ["\\dddot{\\eta}" ]) ("h.dddd" ["\\ddddot{\\eta}"])
("h.o"   ["\\mathring{\\eta}"]) 
("i."    ["\\iota"         ]) ("i.b"   ["\\bar{\\iota}"  ])
("i.v"   ["\\vec{\\iota}"  ]) ("i.h"   ["\\hat{\\iota}"  ])
("i.d"   ["\\dot{\\iota}"  ]) ("i.dd"  ["\\ddot{\\iota}" ])
("i.ddd" ["\\dddot{\\iota}"]) ("i.dddd" ["\\ddddot{\\iota}"])
("i.o"   ["\\mathring{\\iota}"]) 
("j."    ["\\xi"           ]) ("j.b"   ["\\bar{\\xi}"    ])
("j.v"   ["\\vec{\\xi}"    ]) ("j.h"   ["\\hat{\\xi}"    ])
("j.d"   ["\\dot{\\xi}"    ]) ("j.dd"  ["\\ddot{\\xi}"   ])
("j.ddd" ["\\dddot{\\xi}"  ]) ("j.dddd" ["\\ddddot{\\xi}" ])
("j.o"   ["\\mathring{\\xi}"]) 
("k."    ["\\kappa"        ]) ("k.b"   ["\\bar{\\kappa}" ])
("k.v"   ["\\vec{\\kappa}" ]) ("k.h"   ["\\hat{\\kappa}" ])
("k.d"   ["\\dot{\\kappa}" ]) ("k.dd"  ["\\ddot{\\kappa}"])
("k.ddd" ["\\dddot{\\kappa}"]) ("k.dddd" ["\\ddddot{\\kappa}"])
("k.o"   ["\\mathring{\\kappa}"]) 
("l."    ["\\lambda"       ]) ("l.b"   ["\\bar{\\lambda}"])
("l.v"   ["\\vec{\\lambda}"]) ("l.h"   ["\\hat{\\lambda}"])
("l.d"   ["\\dot{\\lambda}"]) ("l.dd"  ["\\ddot{\\lambda}"])
("l.ddd" ["\\dddot{\\lambda}"]) ("l.dddd" ["\\ddddot{\\lambda}"])
("l.o"   ["\\mathring{\\lambda}"]) 
("m."    ["\\mu"           ]) ("m.b"   ["\\bar{\\mu}"    ])
("m.v"   ["\\vec{\\mu}"    ]) ("m.h"   ["\\hat{\\mu}"    ])
("m.d"   ["\\dot{\\mu}"    ]) ("m.dd"  ["\\ddot{\\mu}"   ])
("m.ddd" ["\\dddot{\\mu}"  ]) ("m.dddd" ["\\ddddot{\\mu}" ])
("m.o"   ["\\mathring{\\mu}"]) 
("n."    ["\\nu"           ]) ("n.b"   ["\\bar{\\nu}"    ])
("n.v"   ["\\vec{\\nu}"    ]) ("n.h"   ["\\hat{\\nu}"    ])
("n.d"   ["\\dot{\\nu}"    ]) ("n.dd"  ["\\ddot{\\nu}"   ])
("n.ddd" ["\\dddot{\\nu}"  ]) ("n.dddd" ["\\ddddot{\\nu}" ])
("n.o"   ["\\mathring{\\nu}"]) 
("o."    ["o"              ]) ("o.b"   ["\\bar{o}"       ])
("o.v"   ["\\vec{o}"       ]) ("o.h"   ["\\hat{o}"       ])
("o.d"   ["\\dot{o}"       ]) ("o.dd"  ["\\ddot{o}"      ])
("o.ddd" ["\\dddot{o}"     ]) ("o.dddd" ["\\ddddot{o}"    ])
("o.o"   ["\\mathring{o}"  ]) 
("p."    ["\\pi"           ]) ("p.b"   ["\\bar{\\pi}"    ])
("p.v"   ["\\vec{\\pi}"    ]) ("p.h"   ["\\hat{\\pi}"    ])
("p.d"   ["\\dot{\\pi}"    ]) ("p.dd"  ["\\ddot{\\pi}"   ])
("p.ddd" ["\\dddot{\\pi}"  ]) ("p.dddd" ["\\ddddot{\\pi}" ])
("p.o"   ["\\mathring{\\pi}"]) 
("r."    ["\\rho"          ]) ("r.b"   ["\\bar{\\rho}"   ])
("r.v"   ["\\vec{\\rho}"   ]) ("r.h"   ["\\hat{\\rho}"   ])
("r.d"   ["\\dot{\\rho}"   ]) ("r.dd"  ["\\ddot{\\rho}"  ])
("r.ddd" ["\\dddot{\\rho}" ]) ("r.dddd" ["\\ddddot{\\rho}"])
("r.o"   ["\\mathring{\\rho}"]) 
("s."    ["\\sigma"        ]) ("s.b"   ["\\bar{\\sigma}" ])
("s.v"   ["\\vec{\\sigma}" ]) ("s.h"   ["\\hat{\\sigma}" ])
("s.d"   ["\\dot{\\sigma}" ]) ("s.dd"  ["\\ddot{\\sigma}"])
("s.ddd" ["\\dddot{\\sigma}"]) ("s.dddd" ["\\ddddot{\\sigma}"])
("s.o"   ["\\mathring{\\sigma}"]) 
("t."    ["\\tau"          ]) ("t.b"   ["\\bar{\\tau}"   ])
("t.v"   ["\\vec{\\tau}"   ]) ("t.h"   ["\\hat{\\tau}"   ])
("t.d"   ["\\dot{\\tau}"   ]) ("t.dd"  ["\\ddot{\\tau}"  ])
("t.ddd" ["\\dddot{\\tau}" ]) ("t.dddd" ["\\ddddot{\\tau}"])
("t.o"   ["\\mathring{\\tau}"]) 
("th."   ["\\theta"        ]) ("th.b"  ["\\bar{\\theta}" ])
("th.v"  ["\\vec{\\theta}" ]) ("th.h"  ["\\hat{\\theta}" ])
("th.d"  ["\\dot{\\theta}" ]) ("th.dd" ["\\ddot{\\theta}"])
("th.ddd" ["\\dddot{\\theta}"]) ("th.dddd" ["\\ddddot{\\theta}"])
("th.o"  ["\\mathring{\\theta}"]) 
("u."    ["\\upsilon"      ]) ("u.b"   ["\\bar{\\upsilon}"])
("u.v"   ["\\vec{\\upsilon}"]) ("u.h"   ["\\hat{\\upsilon}"])
("u.d"   ["\\dot{\\upsilon}"]) ("u.dd"  ["\\ddot{\\upsilon}"])
("u.ddd" ["\\dddot{\\upsilon}"]) ("u.dddd" ["\\ddddot{\\upsilon}"])
("u.o"   ["\\mathring{\\upsilon}"]) 
("w."    ["\\omega"        ]) ("w.b"   ["\\bar{\\omega}" ])
("w.v"   ["\\vec{\\omega}" ]) ("w.h"   ["\\hat{\\omega}" ])
("w.d"   ["\\dot{\\omega}" ]) ("w.dd"  ["\\ddot{\\omega}"])
("w.ddd" ["\\dddot{\\omega}"]) ("w.dddd" ["\\ddddot{\\omega}"])
("w.o"   ["\\mathring{\\omega}"]) 
("x."    ["\\chi"          ]) ("x.b"   ["\\bar{\\chi}"   ])
("x.v"   ["\\vec{\\chi}"   ]) ("x.h"   ["\\hat{\\chi}"   ])
("x.d"   ["\\dot{\\chi}"   ]) ("x.dd"  ["\\ddot{\\chi}"  ])
("x.ddd" ["\\dddot{\\chi}" ]) ("x.dddd" ["\\ddddot{\\chi}"])
("x.o"   ["\\mathring{\\chi}"]) 
("z."    ["\\zeta"         ]) ("z.b"   ["\\bar{\\zeta}"  ])
("z.v"   ["\\vec{\\zeta}"  ]) ("z.h"   ["\\hat{\\zeta}"  ])
("z.d"   ["\\dot{\\zeta}"  ]) ("z.dd"  ["\\ddot{\\zeta}" ])
("z.ddd" ["\\dddot{\\zeta}"]) ("z.dddd" ["\\ddddot{\\zeta}"])
("z.o"   ["\\mathring{\\zeta}"]) 

;; --------------- Greek variations --------------- ;;
("r.."   ["\\varrho"       ]) ("r..b"  ["\\bar{\\varrho}"])
("r..v"  ["\\vec{\\varrho}"]) ("r..h"  ["\\hat{\\varrho}"])
("r..d"  ["\\dot{\\varrho}"]) ("r..dd" ["\\ddot{\\varrho}"])
("r..ddd" ["\\dddot{\\varrho}"]) ("r..dddd" ["\\ddddot{\\varrho}"])
("r..o"  ["\\mathring{\\varrho}"]) 
("e.."   ["\\varepsilon"   ]) ("e..b"  ["\\bar{\\varepsilon}"])
("e..v"  ["\\vec{\\varepsilon}"]) ("e..h"  ["\\hat{\\varepsilon}"])
("e..d"  ["\\dot{\\varepsilon}"]) ("e..dd" ["\\ddot{\\varepsilon}"])
("e..ddd" ["\\dddot{\\varepsilon}"]) ("e..dddd" ["\\ddddot{\\varepsilon}"])
("e..o"  ["\\mathring{\\varepsilon}"]) 
("k.."   ["\\varkappa"     ]) ("k..b"  ["\\bar{\\varkappa}"])
("k..v"  ["\\vec{\\varkappa}"]) ("k..h"  ["\\hat{\\varkappa}"])
("k..d"  ["\\dot{\\varkappa}"]) ("k..dd" ["\\ddot{\\varkappa}"])
("k..ddd" ["\\dddot{\\varkappa}"]) ("k..dddd" ["\\ddddot{\\varkappa}"])
("k..o"  ["\\mathring{\\varkappa}"]) 
("p.."   ["\\varpi"        ]) ("p..b"  ["\\bar{\\varpi}" ])
("p..v"  ["\\vec{\\varpi}" ]) ("p..h"  ["\\hat{\\varpi}" ])
("p..d"  ["\\dot{\\varpi}" ]) ("p..dd" ["\\ddot{\\varpi}"])
("p..ddd" ["\\dddot{\\varpi}"]) ("p..dddd" ["\\ddddot{\\varpi}"])
("p..o"  ["\\mathring{\\varpi}"]) 
("f.."   ["\\varphi"       ]) ("f..b"  ["\\bar{\\varphi}"])
("f..v"  ["\\vec{\\varphi}"]) ("f..h"  ["\\hat{\\varphi}"])
("f..d"  ["\\dot{\\varphi}"]) ("f..dd" ["\\ddot{\\varphi}"])
("f..ddd" ["\\dddot{\\varphi}"]) ("f..dddd" ["\\ddddot{\\varphi}"])
("f..o"  ["\\mathring{\\varphi}"]) 
("s.."   ["\\varsigma"     ]) ("s..b"  ["\\bar{\\varsigma}"])
("s..v"  ["\\vec{\\varsigma}"]) ("s..h"  ["\\hat{\\varsigma}"])
("s..d"  ["\\dot{\\varsigma}"]) ("s..dd" ["\\ddot{\\varsigma}"])
("s..ddd" ["\\dddot{\\varsigma}"]) ("s..dddd" ["\\ddddot{\\varsigma}"])
("s..o"  ["\\mathring{\\varsigma}"]) 
("th.."  ["\\vartheta"     ]) ("th..b" ["\\bar{\\vartheta}"])
("th..v" ["\\vec{\\vartheta}"]) ("th..h" ["\\hat{\\vartheta}"])
("th..d" ["\\dot{\\vartheta}"]) ("th..dd" ["\\ddot{\\vartheta}"])
("th..ddd" ["\\dddot{\\vartheta}"]) ("th..dddd" ["\\ddddot{\\vartheta}"])
("th..o" ["\\mathring{\\vartheta}"]) 

;; --------------- Common Symbols --------------- ;;
("inf"   ["\\infty"        ]) ("ex"    ["\\exists"       ])
("exn"   ["\\nexists"      ]) ("fa"    ["\\forall"       ])
("hb"    ["\\hbar"         ]) ("hb."   ["\\hslash"       ])
("ii"    ["\\imath"        ]) ("jj"    ["\\jmath"        ])
("nab"   ["\\nabla"        ]) ("cm"    ["\\checkmark"    ])
("bu"    ["\\bullet"       ]) ("vee"   ["\\vee"          ])
("wedge" ["\\wedge"        ]) ("ell"   ["\\ell"          ])
("aleph" ["\\aleph"        ]) ("%"     ["\\%"            ])

;; --------------- Simple Arithmetics --------------- ;;
("+-"    ["\\pm"           ]) ("-+"    ["\\mp"           ])
("xx"    ["\\times"        ]) ("::"    ["\\div"          ])
("**"    ["\\cdot"         ]) ("o+"    ["\\oplus"        ])
("o-"    ["\\ominus"       ]) ("ox"    ["\\otimes"       ])
("o*"    ["\\odot"         ]) ("o/"    ["\\oslash"       ])

;; --------------- Binary Relation --------------- ;;
("="     ["="              ]) ("=n"    ["\\neq"          ])
("=?"    ["\\stackrel{?}{=}"]) ("=y"    ["\\stackrel{\\checkmark}{=}"])
("<"     ["<"              ]) ("<n"    ["\\nless"        ])
("<?"    ["\\stackrel{?}{<}"]) ("<y"    ["\\stackrel{\\checkmark}{<}"])
(">"     [">"              ]) (">n"    ["\\ngtr"         ])
(">?"    ["\\stackrel{?}{>}"]) (">y"    ["\\stackrel{\\checkmark}{>}"])
("<."    ["\\leq"          ]) ("<.n"   ["\\nleq"         ])
("<.?"   ["\\stackrel{?}{\\leq}"]) ("<.y"   ["\\stackrel{\\checkmark}{\\leq}"])
(">."    ["\\geq"          ]) (">.n"   ["\\ngeq"         ])
(">.?"   ["\\stackrel{?}{\\geq}"]) (">.y"   ["\\stackrel{\\checkmark}{\\geq}"])
("<<"    ["\\ll"           ]) ("<<n"   ["\\cancel{\\ll}" ])
("<<?"   ["\\stackrel{?}{\\ll}"]) ("<<y"   ["\\stackrel{\\checkmark}{\\ll}"])
(">>"    ["\\gg"           ]) (">>n"   ["\\cancel{\\gg}" ])
(">>?"   ["\\stackrel{?}{\\gg}"]) (">>y"   ["\\stackrel{\\checkmark}{\\gg}"])
("sim"   ["\\sim"          ]) ("simn"  ["\\nsim"         ])
("sim?"  ["\\stackrel{?}{\\sim}"]) ("simy"  ["\\stackrel{\\checkmark}{\\sim}"])
("3="    ["\\equiv"        ]) ("3=n"   ["\\cancel{\\equiv}"])
("3=?"   ["\\stackrel{?}{\\equiv}"]) ("3=y"   ["\\stackrel{\\checkmark}{\\equiv}"])
("=."    ["\\equiv"        ]) ("=.n"   ["\\cancel{\\equiv}"])
("=.?"   ["\\stackrel{?}{\\equiv}"]) ("=.y"   ["\\stackrel{\\checkmark}{\\equiv}"])
("=.."   ["\\approx"       ]) ("=..n"  ["\\cancel{\\approx}"])
("=..?"  ["\\stackrel{?}{\\approx}"]) ("=..y"  ["\\stackrel{\\checkmark}{\\approx}"])
("=:"    ["\\coloneqq"     ]) ("=:n"   ["\\cancel{\\coloneqq}"])
("=:?"   ["\\stackrel{?}{\\coloneqq}"]) ("=:y"   ["\\stackrel{\\checkmark}{\\coloneqq}"])
(":="    ["\\coloneqq"     ]) (":=n"   ["\\cancel{\\coloneqq}"])
(":=?"   ["\\stackrel{?}{\\coloneqq}"]) (":=y"   ["\\stackrel{\\checkmark}{\\coloneqq}"])
("propto" ["\\propto"       ]) ("propton" ["\\cancel{\\propto}"])
("propto?" ["\\stackrel{?}{\\propto}"]) ("proptoy" ["\\stackrel{\\checkmark}{\\propto}"])

;; --------------- Set Symbols --------------- ;;
("0/"    ["\\emptyset"     ]) ("nsr"   ["\\mathbb{R}"    ])
("nsc"   ["\\mathbb{C}"    ]) ("nsn"   ["\\mathbb{N}"    ])
("nsp"   ["\\mathbb{P}"    ]) ("nsz"   ["\\mathbb{Z}"    ])
("nsi"   ["\\mathbb{I}"    ]) 
;; --------------- Set Relation Symbols --------------- ;;
("in"    ["\\in"           ]) ("inn"   ["\\notin"        ])
("in."   ["\\ni"           ]) ("in.n"  [""               ])
("ni"    ["\\ni"           ]) ("nin"   [""               ])
("sub"   ["\\subset"       ]) ("subn"  ["\\cancel{\\subset}"])
("sub."  ["\\subseteq"     ]) ("sub.n" ["\\nsubseteq"    ])
("sup"   ["\\supset"       ]) ("supn"  ["\\cancel{\\supset}"])
("sup."  ["\\supseteq"     ]) ("sup.n" ["\\nsupseteq"    ])
("sand"  ["\\cap"          ]) ("sandn" [""               ])
("sor"   ["\\cup"          ]) ("sorn"  [""               ])
("s-"    ["\\setminus"     ]) ("s-n"   [""               ])

;; --------------- Logic Symbols --------------- ;;
("or"    ["\\lor"          ]) ("or."   ["\\text{or}"     ])
("and"   ["\\land"         ]) ("and."  ["\\text{and}"    ])
("neg"   ["\\neg"          ]) ("neg."  [""               ])
("not"   ["\\not "         ]) ("not."  ["\\text{not}"    ])
("if"    [""               ]) ("if."   ["\\text{if}"     ])
("else"  [""               ]) ("else." ["\\text{else}"   ])

;; --------------- Single Line Arrows --------------- ;;
("<-"    ["\\leftarrow"    ]) ("<-n"   ["\\nleftarrow"   ])
("->"    ["\\rightarrow"   ]) ("->n"   ["\\nrightarrow"  ])
("-^"    ["\\uparrow"      ]) ("-^n"   ["\\nuparrow"     ])
("-v"    ["\\downarrow"    ]) ("-vn"   ["\\ndownarrow"   ])
("<->"   ["\\leftrightarrow"]) ("<->n"  ["\\nleftrightarrow"])
("-->"   ["\\longrightarrow"]) ("-->n"  ["\\cancel{\\longrightarrow}"])
("<--"   ["\\longleftarrow"]) ("<--n"  ["\\cancel{\\longleftarrow}"])
("to"    ["\\to"           ]) ("ton"   ["\\nrightarrow"  ])
("mto"   ["\\mapsto"       ]) ("mton"  ["\\cancel{\\mapsto}"])
("mto."  ["\\longmapsto"   ]) ("mto.n" ["\\cancel{\\longmapsto}"])

;; --------------- Double Line Arrows --------------- ;;
("<="    ["\\Leftarrow"    ]) ("<=n"   ["\\nLeftarrow"   ])
("=>"    ["\\Rightarrow"   ]) ("=>n"   ["\\nRightarrow"  ])
("=^"    ["\\Uparrow"      ]) ("=^n"   ["\\cancel{\\Uparrow}"])
("=v"    ["\\Downarrow"    ]) ("=vn"   ["\\cancel{\\Downarrow}"])
("<=>"   ["\\Leftrightarrow"]) ("<=>n"  ["\\nLeftrightarrow"])
("iff"   ["\\Leftrightarrow"]) ("iffn"  ["\\nLeftrightarrow"])
("<=="   ["\\Longleftarrow"]) ("<==n"  ["\\cancel{\\Longleftarrow}"])
("==>"   ["\\Longrightarrow"]) ("==>n"  ["\\cancel{\\Longrightarrow}"])
("<==>"  ["\\Longleftrightarrow"]) ("<==>n" ["\\cancel{\\Longleftrightarrow}"])
("iff."  ["\\Longleftrightarrow"]) ("iff.n" ["\\cancel{\\Longleftrightarrow}"])

;; --------------- Long Arrows --------------- ;;
("<---"  ["\\xleftarrow[ ]{ }"]) ("--->"  ["\\xrightarrow[ ]{ }"])
("===>"  ["\\xRightarrow[ ]{ }"]) ("<==="  ["\\xLeftarrow[ ]{ }"])

;; --------------- 3 Dot variation --------------- ;;
("..."   ["\\dots"         ]) (".v"    ["\\vdots"        ])
(".d"    ["\\ddots"        ]) (".l"    ["\\ldots"        ])

;; --------------- Geometry Symbols --------------- ;;
("perp"  ["\\perp"         ]) ("para"  ["\\parallel"     ])
("ang"   ["\\angle"        ]) ("ang."  ["\\measuredangle"])
("tri"   ["\\vartriangle"  ]) ("tri."  ["\\triangledown" ])
("squ"   ["\\square"       ]) ("box"   [" "              ])

;; --------------- Spacing Symbols --------------- ;;
("qu"    [" \\quad "       ]) ("quu"   [" \\qquad "      ])
("spn"   [" \\! "          ]) ("sp"    [" \\, "          ])
("sp."   [" \\: "          ]) ("sp.."  [" \\; "          ])
("sp..." [" \\quad "       ]) ("sp...." [" \\qquad "      ])

;; --------------- Accent names --------------- ;;
("vec"   ["\\vec{ }"       ]) ("vec."  ["\\overrightarrow{  }"])
("bar"   ["\\bar{ }"       ]) ("bar."  ["\\overline{  }" ])
("hat"   ["\\hat{ }"       ]) ("hat."  ["\\widehat{  }"  ])
("dot"   ["\\dot{ }"       ]) ("dot."  ["\\ddot{ }"      ])
("dot.." ["\\dddot{ }"     ]) ("dot..." ["\\ddddot{ }"    ])
("sqrt"  ["\\sqrt{ }"      ]) ("sqrt." ["\\sqrt[ ]{ }"   ])
("can"   ["\\cancel{ }"    ]) ("ff"    ["\\frac{"        ])
("box."  ["\\boxed{"       ]) ("=="    ["&="             ])

;; --------------- Super/Sub-scripts --------------- ;;
("pp"    ["^{"             ]) ("^"     ["^{"             ])
("ll"    ["_{"             ]) ("_"     ["_{"             ])
("px"    ["^x"             ]) ("li"    ["_i"             ])
("*."    [" ^*"            ]) ("deg"   [" ^\\circ"       ])
("tr"    [" ^T"            ]) ("trn"   [" ^{-T}"         ])
("inv"   [" ^{-1}"         ]) ("ham"   [" ^{H}"          ])
("dag"   [" ^\\dagger"     ]) ("dag."  [" ^\\ddagger"    ])

;; --------------- Super/Sub-scripts 09 --------------- ;;
("p0"    [" ^0"            ]) ("p1"    [" ^1"            ])
("p2"    [" ^2"            ]) ("p3"    [" ^3"            ])
("p4"    [" ^4"            ]) ("p5"    [" ^5"            ])
("p6"    [" ^6"            ]) ("p7"    [" ^7"            ])
("p8"    [" ^8"            ]) ("p9"    [" ^9"            ])
("pn"    [" ^n"            ]) 
("l0"    [" _0"            ]) ("l1"    [" _1"            ])
("l2"    [" _2"            ]) ("l3"    [" _3"            ])
("l4"    [" _4"            ]) ("l5"    [" _5"            ])
("l6"    [" _6"            ]) ("l7"    [" _7"            ])
("l8"    [" _8"            ]) ("l9"    [" _9"            ])
("ln"    [" _n"            ]) 

;; --------------- Under/Over --------------- ;;
("__"    ["\\underset{ }{ }"]) ("__."   ["\\underbrace{ }_ "])
("__.."  ["\\underline{ }" ]) 
("^^"    ["\\overset{ }{ }"]) ("^^."   ["\\overbrace{ }^ "])
("^^.."  ["\\overline{ }"  ]) 

;; --------------- Named Functinos --------------- ;;
("rank"  ["\\mathrm{rank}" ]) ("arg"   ["\\arg"          ])
("det"   ["\\det"          ]) ("dim"   ["\\dim"          ])
("exp"   ["\\exp"          ]) ("Im."   ["\\mathrm{Im}"   ])
("Re"    ["\\mathrm{Re}"   ]) ("ln"    ["\\ln"           ])
("log"   ["\\log"          ]) ("max"   ["\\max"          ])
("min"   ["\\min"          ]) ("dim"   ["\\dim"          ])
("mod"   [" \\pmod "       ]) ("mod."  [" \\mod "        ])
("mod.." [" \\bmod "       ]) ("binom" ["\\binom{ }{ }"  ])

;; --------------- Trignometric Functinos --------------- ;;
("cos"   ["\\cos"          ]) ("sin"   ["\\sin"          ])
("tan"   ["\\tan"          ]) ("cot"   ["\\cot"          ])
("acos"  ["\\arccos"       ]) ("asin"  ["\\arcsin"       ])
("atan"  ["\\arctan"       ]) 
;; --------------- Iteration Tools --------------- ;;
("il"    ["\\limits_ "     ]) ("il."   ["\\limits_ ^ "   ])
("| ."   [" \\Bigg\\vert_ ^ "]) 
;; --------------- Iteration Functions --------------- ;;
("lim"   ["\\lim"          ]) ("lim."  ["\\lim_ "        ])
("lim.." ["\\lim\\limits_{x\\to0}"]) ("lim..." ["\\lim\\limits_{x\\to\\infty}"])
("sum"   ["\\sum"          ]) ("sum."  ["\\sum\\limits_ "])
("sum.." ["\\sum\\limits_{i=1}^n"]) ("sum..." ["\\sum\\limits_{i=1}^\\infty"])
("prod"  ["\\prod"         ]) ("prod." ["\\prod\\limits_ "])
("prod.." ["\\prod\\limits_{i=1}^n"]) ("prod..." ["\\prod\\limits_{i=1}^\\infty"])
("int"   ["\\int"          ]) ("int."  ["\\int\\limits_ ^ "])
("int.." ["\\int\\limits_0^\\infty"]) ("int..." ["\\int\\limits_{-\\infty}^\\infty"])
("inti"  ["\\iint"         ]) ("inti." ["\\iint\\limits_ "])
("inti.." ["\\iint\\limits_C"]) ("inti..." ["\\iint\\limits_\\gamma"])
("intii" ["\\iiint"        ]) ("intii." ["\\iiint\\limits_ "])
("intii.." ["\\iiint\\limits_C"]) ("intii..." ["\\iiint\\limits_\\gamma"])
("intiii" ["\\iiiint"       ]) ("intiii." ["\\iiiint\\limits_ "])
("intiii.." ["\\iiiint\\limits_C"]) ("intiii..." ["\\iiiint\\limits_\\gamma"])
("into"  ["\\oint"         ]) ("into." ["\\oint\\limits_ "])
("into.." ["\\oint\\limits_C"]) ("into..." ["\\oint\\limits_\\gamma"])

;; --------------- Differential d --------------- ;;
("dd."   ["\\dd"           ]) ("dd.2"  ["\\dd^2"         ])
("dd.3"  ["\\dd^3"         ]) ("dd.4"  ["\\dd^4"         ])
("dd.n"  ["\\dd^n"         ]) 
("dx"    ["\\ddx"          ]) ("dx2"   ["\\ddx^2"        ])
("dx3"   ["\\ddx^3"        ]) ("dx4"   ["\\ddx^4"        ])
("dxn"   ["\\ddx^n"        ]) 
("dy"    ["\\ddy"          ]) ("dy2"   ["\\ddy^2"        ])
("dy3"   ["\\ddy^3"        ]) ("dy4"   ["\\ddy^4"        ])
("dyn"   ["\\ddy^n"        ]) 
("dz"    ["\\ddz"          ]) ("dz2"   ["\\ddz^2"        ])
("dz3"   ["\\ddz^3"        ]) ("dz4"   ["\\ddz^4"        ])
("dzn"   ["\\ddz^n"        ]) 
("dt"    ["\\ddt"          ]) ("dt2"   ["\\ddt^2"        ])
("dt3"   ["\\ddt^3"        ]) ("dt4"   ["\\ddt^4"        ])
("dtn"   ["\\ddt^n"        ]) 
("dd.."  ["\\partial"      ]) ("dd..2" ["\\partial^2"    ])
("dd..3" ["\\partial^3"    ]) ("dd..4" ["\\partial^4"    ])
("dd..n" ["\\partial^n"    ]) 
("dx."   ["\\partialx"     ]) ("dx.2"  ["\\partialx^2"   ])
("dx.3"  ["\\partialx^3"   ]) ("dx.4"  ["\\partialx^4"   ])
("dx.n"  ["\\partialx^n"   ]) 
("dy."   ["\\partialy"     ]) ("dy.2"  ["\\partialy^2"   ])
("dy.3"  ["\\partialy^3"   ]) ("dy.4"  ["\\partialy^4"   ])
("dy.n"  ["\\partialy^n"   ]) 
("dz."   ["\\partialz"     ]) ("dz.2"  ["\\partialz^2"   ])
("dz.3"  ["\\partialz^3"   ]) ("dz.4"  ["\\partialz^4"   ])
("dz.n"  ["\\partialz^n"   ]) 
("dt."   ["\\partialt"     ]) ("dt.2"  ["\\partialt^2"   ])
("dt.3"  ["\\partialt^3"   ]) ("dt.4"  ["\\partialt^4"   ])
("dt.n"  ["\\partialt^n"   ]) 

;; --------------- Derivatives --------------- ;;
("df"    ["\\dv{ }"        ]) ("df2"   ["\\dv[2]{ }"     ])
("df3"   ["\\dv[3]{ }"     ]) ("df4"   ["\\dv[4]{ }"     ])
("dfn"   ["\\dv[n]{ }"     ]) 
("dfx"   ["\\dv{x}"        ]) ("dfx2"  ["\\dv[2]{x}"     ])
("dfx3"  ["\\dv[3]{x}"     ]) ("dfx4"  ["\\dv[4]{x}"     ])
("dfxn"  ["\\dv[n]{x}"     ]) 
("dfy"   ["\\dv{y}"        ]) ("dfy2"  ["\\dv[2]{y}"     ])
("dfy3"  ["\\dv[3]{y}"     ]) ("dfy4"  ["\\dv[4]{y}"     ])
("dfyn"  ["\\dv[n]{y}"     ]) 
("dfz"   ["\\dv{z}"        ]) ("dfz2"  ["\\dv[2]{z}"     ])
("dfz3"  ["\\dv[3]{z}"     ]) ("dfz4"  ["\\dv[4]{z}"     ])
("dfzn"  ["\\dv[n]{z}"     ]) 
("dft"   ["\\dv{t}"        ]) ("dft2"  ["\\dv[2]{t}"     ])
("dft3"  ["\\dv[3]{t}"     ]) ("dft4"  ["\\dv[4]{t}"     ])
("dftn"  ["\\dv[n]{t}"     ]) 
("df."   ["\\pdv{ }"       ]) ("df.2"  ["\\pdv[2]{ }"    ])
("df.3"  ["\\pdv[3]{ }"    ]) ("df.4"  ["\\pdv[4]{ }"    ])
("df.n"  ["\\pdv[n]{ }"    ]) 
("df.x"  ["\\pdv{x}"       ]) ("df.x2" ["\\pdv[2]{x}"    ])
("df.x3" ["\\pdv[3]{x}"    ]) ("df.x4" ["\\pdv[4]{x}"    ])
("df.xn" ["\\pdv[n]{x}"    ]) 
("df.y"  ["\\pdv{y}"       ]) ("df.y2" ["\\pdv[2]{y}"    ])
("df.y3" ["\\pdv[3]{y}"    ]) ("df.y4" ["\\pdv[4]{y}"    ])
("df.yn" ["\\pdv[n]{y}"    ]) 
("df.z"  ["\\pdv{z}"       ]) ("df.z2" ["\\pdv[2]{z}"    ])
("df.z3" ["\\pdv[3]{z}"    ]) ("df.z4" ["\\pdv[4]{z}"    ])
("df.zn" ["\\pdv[n]{z}"    ]) 
("df.t"  ["\\pdv{t}"       ]) ("df.t2" ["\\pdv[2]{t}"    ])
("df.t3" ["\\pdv[3]{t}"    ]) ("df.t4" ["\\pdv[4]{t}"    ])
("df.tn" ["\\pdv[n]{t}"    ]) 

;; --------------- Parentheses --------------- ;;
("()."   ["\\left( \\right)"]) ("().."  ["\\left( \\middle\\vert \\right)"])
("{}."   ["\\left\\{ \\right\\}"]) ("{}.."  ["\\left\\{ \\middle\\vert \\right\\}"])
("<>."   ["\\left< \\right>"]) ("<>.."  ["\\left< \\middle\\vert \\right>"])
("[]."   ["\\left[ \\right]"]) ("[].."  ["\\left[ \\middle\\vert \\right]"])
("| | ." ["\\left\\vert \\right\\vert"]) ("| | .." ["\\left\\Vert \\right\\Vert"])
("(."    ["\\left( \\right."]) ("(.."   ["\\left( \\right\\vert"])
("[."    ["\\left[ \\right."]) ("[.."   ["\\left[ \\right\\vert"])
("{."    ["\\left\\{ \\right."]) ("{.."   ["\\left\\{ \\right\\vert"])
("<."    ["\\left< \\right."]) ("<.."   ["\\left< \\right\\vert"])
(".)"    ["\\left. \\right)"]) (".)."   ["\\left\\vert \\right)"])
(".]"    ["\\left. \\right]"]) (".]."   ["\\left\\vert \\right]"])
(".}"    ["\\left. \\right\\}"]) (".}."   ["\\left\\vert \\right\\}"])
(".>"    ["\\left. \\right>"]) (".>."   ["\\left\\vert \\right>"])
("[].f"  ["\\lfloor \\rfloor"]) ("[].f." ["\\left\\lfloor \\right\\rfloor"])
("[].c"  ["\\lceil \\rceil"]) ("[].c." ["\\left\\lceil \\right\\rceil"])

;; --------------- Math Text --------------- ;;
("te"    ["\\text{LoremIpsum}"]) ("tt"    ["\\mathrm{LoremIpsum}"])
("tb"    ["\\mathbf{LoremIpsum}"]) ("ti"    ["\\mathit{LoremIpsum}"])

;; --------------- XY diagram --------------- ;;
("xy"    ["\\xymatrix{"    ]) ("ar"    ["\\ar"           ])
#+end_SRC




** Executable elisp function definition
#+name: quail-executions
#+begin_src emacs-lisp
(defun quail-func-init ()
  (quail-delete-region)
  (setq quail-current-str nil
	quail-converting nil
	quail-conversion-str ""))

(defun quail-func-end ()
  (throw 'quail-tag nil))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun quail-TeQ-equation (key idx)
  (quail-func-init)
  (if (eq major-mode 'org-mode)
    (org-return) (message "not org"))
  (insert "\\begin{equation}\n\n\\end{equation}")
  (previous-line)
  (when (require 'org-indent nil 'noerror) (org-indent-mode 1))
  (quail-func-end))

(defun quail-TeQ-aligned (key idx)
  (quail-func-init)
  (insert "\\begin{aligned}\n\n\\end{aligned}")
  (previous-line)
  (when (require 'org-indent nil 'noerror) (org-indent-mode 1))
  (quail-func-end))

(defun quail-TeQ-matrix (key idx)
  (quail-func-init)
  (insert "\\begin{pmatrix}\n & & \\\\ \n & & \\\\ \n & & \\\\ \n\\end{pmatrix}")
  (previous-line) (previous-line) (previous-line)
  (beginning-of-line)
  (when (require 'org-indent nil 'noerror) (org-indent-mode 1))
  (quail-func-end))

(defun quail-TeQ-case (key idx)
  (quail-func-init)
  (insert "\\begin{case}\n & \\text{ if } \\\\ \n & \\text{ else } \\\\ \n\\end{case}")
  (previous-line) (previous-line)
  (beginning-of-line)
  (when (require 'org-indent nil 'noerror) (org-indent-mode 1))
  (quail-func-end))

(defun quail-TeQ-endofline (key idx)
  (quail-func-init)
  (end-of-line)
  (insert "\\\\")
  (when (require 'evil nil 'noerror) (evil-normal-state))
  (quail-func-end))

(defun quail-TeQ-nextline (key idx)
  (quail-func-init)
  (end-of-line)
  (insert "\n")
  ;; (when (require 'evil nil 'noerror) (evil-normal-state))
  (quail-func-end))

(defun quail-TeQ-prevline (key idx)
  (quail-func-init)
  ;; (end-of-line)
  (beginning-of-line)
  (insert "\n")
  (previous-line)
  ;; (when (require 'evil nil 'noerror) (evil-normal-state))
  (quail-func-end))


(defun quail-TeQ-next (key idx)
  (quail-func-init)
  ;; (evil-find-char 1 32)
  (right-char)
  (right-char)
  (quail-func-end))

(defun quail-TeQ-prev (key idx)
  (quail-func-init)
  (evil-find-char-backward 1 32)
  ;(left-char)
  ;(left-char)
  (quail-func-end))

(defun quail-TeQ-frac (key idx)
  (quail-func-init)

  (backward-sexp) (kill-sexp)
  (if (looking-back "[a-zA-Z]" 0)
      (progn
	(backward-word)
	(if (= (preceding-char) ?\\ )
	    (progn (message "yes") (kill-word 1)
		   (backward-delete-char 1) (insert "\\frac{\\")
		   (yank 1) (yank 2) (insert "}{}"))
	  (progn (message "no") (forward-word)
		 (insert "\\frac{") (yank) (insert "}{}")))
	)
    (progn (message "no")
					;(forward-word)
	   (insert "\\frac{") (yank) (insert "}{}"))
    )
  (backward-char)

  (quail-func-end))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+end_src

#+RESULTS: quail-executions
: quail-TeQ-frac

** Making the ~el~
#+begin_src elisp :tangle Emacs-TeQ.el :noweb yes
(require 'quail)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


<<quail-executions>>

(quail-define-package
 "TeQ-Math" "Emacs-Teq-Latex"  "TeQ-" t
 "TeQ-Math input"
 nil t t t t nil nil nil nil nil t)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(quail-define-rules
    ;; Greek Alphabets
    <<el-from-table>>
)
#+end_src

#+RESULTS:

 
